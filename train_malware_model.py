import pandas as pd
import joblib
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

# ==============================================================================
# --- CONFIGURATION: EDIT THESE THREE LINES TO MATCH YOUR FILE ---

# 1. Put the correct FULL path to your CSV file here. Use an 'r' at the beginning.
DATASET_PATH = r'D:\project\cyber attack detection\data\Malware dataset.csv'

# 2. Use the correct column name for the file identifier from your output.
ID_COLUMN = 'hash'  # <-- CORRECTED

# 3. Use the correct column name for the labels from your output.
LABEL_COLUMN = 'classification'  # <-- CORRECTED

# ==============================================================================

print("Starting Malware model training process...")

try:
    df = pd.read_csv(DATASET_PATH, low_memory=False)
    print(f"Dataset loaded successfully. Columns found: {df.columns.values}")

    # The features (X) are all columns except for the identifier and the label
    X = df.drop([ID_COLUMN, LABEL_COLUMN], axis=1)
    y = df[LABEL_COLUMN]

    # Clean the data: Convert all feature columns to numeric, coercing errors
    for col in X.columns:
        X[col] = pd.to_numeric(X[col], errors='coerce')
    X = X.fillna(0) # Replace any resulting NaN values with 0


    print("Training the model...")
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
    model = RandomForestClassifier(n_estimators=100, random_state=42, n_jobs=-1)
    model.fit(X_train, y_train)

    print(f"Model Accuracy: {accuracy_score(y_test, model.predict(X_test)) * 100:.2f}%")

    print("Saving model to 'model_malware.pkl'...")
    joblib.dump(model, 'model_malware.pkl')
    print("Model training complete!")

except KeyError as e:
    print(f"\n--- ERROR ---")
    print(f"A KeyError occurred: {e}. This means a column name in the script is wrong.")
    print("Please check the CONFIGURATION section at the top of the script and make sure")
    print("ID_COLUMN and LABEL_COLUMN match the names printed by the script.")
    print("---------------")
except FileNotFoundError:
    print("\n--- ERROR ---")
    print(f"Dataset file not found. Please make sure the path in DATASET_PATH is correct.")
    print("---------------")